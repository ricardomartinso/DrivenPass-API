// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id  Int @id @default(autoincrement())
  email String @unique
  password String
  credentials Credentials[]
  safeNotes SafeNotes[]
  cards Cards[]
  wifis Wifis[]
  sessions Sessions[]

}

model Credentials {
  id Int @id @default(autoincrement())
  name String
  title String
  url String
  username String
  password String
  user Users @relation(fields: [userId], references: [id])
  userId Int

  @@unique([userId, name])
}

model SafeNotes {
  id Int @id @default(autoincrement())
  name String
  noteTitle String @db.VarChar(50)
  description String @db.VarChar(1000)
  user Users @relation(fields: [userId], references: [id])
  userId Int

  @@unique([userId, name])
}
model Wifis {
  id Int @id @default(autoincrement())
  name String
  networkName String
  password String
  user Users @relation(fields: [userId], references: [id])
  userId Int

  @@unique([userId, name])
}

enum CardType {
  credit
  debit
  both
  
  @@map("cardTypes")
}

model Cards {
  id Int @id @default(autoincrement())
  name String
  number String @db.VarChar(16)
  cardHolderName String
  cvc String @db.VarChar(3)
  expirationDate DateTime @db.Date
  password String
  isVirtual Boolean
  type CardType
  user Users @relation(fields: [userId], references: [id])
  userId Int

  @@unique([userId, name])
}

model Sessions {
  id Int @id @default(autoincrement())
  user Users @relation(fields: [userId], references: [id])
  userId Int
}